{% extends 'base.html.twig' %}

{% block title %}Hello CompositionController!{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('styles/composition/index.css') }}">
    <link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap" rel="stylesheet">
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>
{% endblock %}

{% block body %}
    <div class="team-container">
        <div class="background">
            <div class="joueurs-titulaires">
                <div class="ligne premiere-ligne">
                    {% for i in 1..3 %}
                        <div class="player-square" data-position="{{ i }}"></div>
                    {% endfor %}
                </div>
                <div class="ligne deuxieme-ligne">
                    {% for i in 4..5 %}
                        <div class="player-square" data-position="{{ i }}"></div>
                    {% endfor %}
                </div>
                <div class="ligne troisieme-ligne">
                        <div class="player-square" data-position="{{ 7 }}"></div>
                        <div class="player-square" data-position="{{ 8 }}"></div>
                        <div class="player-square" data-position="{{ 6 }}"></div>
                </div>
                <div class="ligne charniere">
                    {% for i in 9..10 %}
                        <div class="player-square" data-position="{{ i }}"></div>
                    {% endfor %}
                </div>
                <div class="ligne trois-quarts">
                    {% for i in 11..14 %}
                        <div class="player-square" data-position="{{ i }}"></div>
                    {% endfor %}
                </div>
                <div class="ligne arriere">
                    <div class="player-square" data-position="15"></div>
                </div>
            </div>
        </div>

        <div class="remplacants-container">
            <h2 style="position: absolute;top:0;">Impact Players</h2>
            <div class="remplacants">
                {% for i in 16..22 %}
                    <div class="player-square" data-position="{{ i }}"></div>
                {% endfor %}
            </div>
        </div>
    </div>
    <div class="player-list">
        <h2>Liste des joueurs</h2>
        <input type="text" id="search-bar" placeholder="Rechercher un joueur...">
        <ul id="player-list">
            {% set players = [
                {'nom': 'Dupont', 'prenom': 'Jean', 'id': 'player-1'},
                {'nom': 'Martin', 'prenom': 'Paul', 'id': 'player-2'},
                {'nom': 'Bernard', 'prenom': 'Pierre', 'id': 'player-3'},
                {'nom': 'Dubois', 'prenom': 'Jacques', 'id': 'player-4'},
                {'nom': 'Moreau', 'prenom': 'Louis', 'id': 'player-5'},
                {'nom': 'Simon', 'prenom': 'Henri', 'id': 'player-6'},
                {'nom': 'Lefevre', 'prenom': 'Julien', 'id': 'player-7'},
                {'nom': 'Michel', 'prenom': 'Luc', 'id': 'player-8'},
                {'nom': 'Garcia', 'prenom': 'Antoine', 'id': 'player-9'},
                {'nom': 'Petit', 'prenom': 'Marc', 'id': 'player-10'},
                {'nom': 'Roux', 'prenom': 'Nicolas', 'id': 'player-11'},
                {'nom': 'Blanc', 'prenom': 'Laurent', 'id': 'player-12'},
                {'nom': 'Muller', 'prenom': 'Fran√ßois', 'id': 'player-13'},
                {'nom': 'Fontaine', 'prenom': 'Charles', 'id': 'player-14'},
                {'nom': 'Chevalier', 'prenom': 'Philippe', 'id': 'player-15'}
            ] %}
            {% for player in players %}
                <li draggable="true" id="{{ player.id }}" data-nom="{{ player.nom }}" data-prenom="{{ player.prenom }}">
                    {{ player.nom }} {{ player.prenom }}
                </li>
            {% endfor %}
            <button id="export-button">Exporter la composition</button>
        </ul>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', (event) => {
            const players = document.querySelectorAll('.player-list li');
            const squares = document.querySelectorAll('.player-square');
            const searchBar = document.getElementById('search-bar');
            const exportButton = document.getElementById('export-button');

            searchBar.addEventListener('input', (e) => {
                const searchTerm = e.target.value.toLowerCase();
                players.forEach(player => {
                    const playerName = player.getAttribute('data-nom').toLowerCase() + ' ' + player.getAttribute('data-prenom').toLowerCase();
                    if (playerName.includes(searchTerm)) {
                        player.style.display = '';
                    } else {
                        player.style.display = 'none';
                    }
                });
            });

            players.forEach(player => {
                player.addEventListener('dragstart', (e) => {
                    e.dataTransfer.setData('text/plain', player.id);
                });
            });

            squares.forEach(square => {
                square.addEventListener('dragover', (e) => {
                    e.preventDefault();
                    square.classList.add('drag-over');
                });

                square.addEventListener('dragleave', () => {
                    square.classList.remove('drag-over');
                });

                square.addEventListener('drop', (e) => {
                    e.preventDefault();
                    square.classList.remove('drag-over');
                    const playerId = e.dataTransfer.getData('text/plain');
                    const player = document.getElementById(playerId);
                    const playerName = player.getAttribute('data-nom').toUpperCase();
                    const playerNumber = square.getAttribute('data-position');
                    if (square.closest('.remplacants-container')) {
                        square.innerHTML = `<img src="{{ asset("img/maillot-ardennes-rugby.png") }}" alt="${playerName}">
                        <div class="substitute-name">
                        <input class="number-input" value="${playerNumber}" min="1" max="99"></input><span> - ${playerName}</span>
                        </div>
                        <button class="delete-button">&times;</button>`;
                    } else {
                        square.innerHTML = `<img src="{{ asset("img/maillot-ardennes-rugby.png") }}" alt="${playerName}"><span>${playerNumber} - ${playerName}</span><button class="delete-button">&times;</button>`;
                    }
                    square.classList.add('no-border');

                    const deleteButton = square.querySelector('.delete-button');
                    deleteButton.addEventListener('click', () => {
                        square.innerHTML = '';
                        square.classList.remove('no-border');
                    });
                });
            });

            exportButton.addEventListener('click', () => {
                // Remove delete buttons and borders for empty squares
                squares.forEach(square => {
                    const deleteButton = square.querySelector('.delete-button');
                    if (deleteButton) {
                        deleteButton.style.display = 'none';
                    }
                    if (!square.innerHTML.trim()) {
                        square.style.border = 'none';
                    }
                });

                // Use html2canvas to capture the composition
                html2canvas(document.querySelector('.team-container')).then(canvas => {
                    const link = document.createElement('a');
                    link.download = 'composition.png';
                    link.href = canvas.toDataURL('image/png');
                    link.click();

                    // Restore delete buttons and borders
                    squares.forEach(square => {
                        const deleteButton = square.querySelector('.delete-button');
                        if (deleteButton) {
                            deleteButton.style.display = 'block';
                        }
                        if (!square.innerHTML.trim()) {
                            square.style.border = '3px dashed white';
                        }
                    });
                });
            });
        });
    </script>
{% endblock %}